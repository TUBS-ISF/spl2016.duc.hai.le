import java.text.SimpleDateFormat;
import java.util.Objects;

import javafx.application.Application;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.ContentDisplay;
import javafx.scene.control.Label;
import javafx.scene.control.TextArea;
import javafx.scene.control.TextField;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.HBox;
import javafx.scene.text.Font;
import javafx.scene.text.Text;
import javafx.stage.Stage;

public class Calendary extends Application{
	
	public static BorderPane root;
	public static String currentDay;
	public static String currentMonth;
	public static String currentWeek;
	public static String currentYear;
	public static String currentDate;
	
	public HBox addHBox() {
		HBox hbox = new HBox();
	    HBox hboxMiddle = new HBox();
	    HBox hboxRight = new HBox();
	    HBox hboxLeft = new HBox();
	    hbox.setPadding(new Insets(15, 12, 15, 12));
	    hbox.setSpacing(300);
	    hbox.setAlignment(Pos.CENTER);
	    Button Months = new Button(),
	    		Weeks = new Button(),
	    		Years = new Button();
        
        
        
        Months = new Button("Months");
        Months.setOnAction(new EventHandler<ActionEvent>() { 
            @Override
            public void handle(ActionEvent event) {
            	root.setCenter(addMonthsView());
            	root.setLeft(null);
            	root.setRight(null);
            }
        });
        
    
        
        Weeks = new Button("Weeks");
        Weeks.setOnAction(new EventHandler<ActionEvent>() {
            @Override
            public void handle(ActionEvent event) {
            	root.setCenter(addWeeksView());
            	root.setLeft(null);
            	root.setRight(null);
            }
        });
        
    
        
        Years = new Button("Years");
        Years.setOnAction(new EventHandler<ActionEvent>() {
            @Override
            public void handle(ActionEvent event) {
            	root.setCenter(addYearsView());
            	root.setLeft(null);
            	root.setRight(null);
            }
        });
        
	        
	        
	        
	        
        Button NewEvent = new Button("+");
        NewEvent.setOnAction(new EventHandler<ActionEvent>() {
            @Override
            public void handle(ActionEvent event) {
                //add new Event to calendary
            }
        });
        
        TextField textField = new TextField();
        hboxRight.getChildren().addAll(textField);
	    hboxRight.setSpacing(5);
        hboxRight.setAlignment(Pos.CENTER_RIGHT);
        
        hboxMiddle.getChildren().addAll(Days, Weeks, Months, Years);
	    hboxMiddle.setSpacing(5);
	    hboxMiddle.setAlignment(Pos.CENTER);
	    
	    hboxLeft.getChildren().addAll(NewEvent);
        hboxLeft.setSpacing(5);
        hboxLeft.setAlignment(Pos.CENTER_LEFT);
        
        hbox.getChildren().addAll(hboxLeft, hboxMiddle, hboxRight);

	    return hbox;
	}
	
	
	public void start(Stage primaryStage) {
        
    	primaryStage.setTitle("Calendary v0.1");
          
        root = new BorderPane();
        HBox hbox = addHBox();
        root.setTop(hbox);  
        
        primaryStage.setScene(new Scene(root, 1200, 600));
        primaryStage.show();
    }
	
	
	
	public String[] getCurrentInformation() {
		
		String[] currentInformation = new String[2];  
		
		String timeStamp = new SimpleDateFormat("yyyy.MM.dd.HH:mm:ss").format(new java.util.Date());
		
		
		String deDate = timeStamp.substring(8, 10) + ". " + getMonth( Integer.parseInt(timeStamp.substring(5, 7))-1, "de") + " " + timeStamp.substring(0, 4);
		currentInformation[0] = deDate;
		
		String enDate = timeStamp.substring(8, 10) + ". " + getMonth( Integer.parseInt(timeStamp.substring(5, 7))-1, "en") + " " + timeStamp.substring(0, 4);;
		currentInformation[0] = enDate;
		
		String time = timeStamp.substring(11);
		currentInformation[1] = time;	
		
		return currentInformation;
	}
	
	
	public GridPane addMonthsView() {
		GridPane gridPane = new GridPane();
		
		String[] weekdays = {"Mo", "Tu", "We", "Thur", "Fri", "Sa", "Sun"};
		for (int i = 0; i < 7; i++) {
			gridPane.add(new Text(weekdays[i]), i, 0);
		}
		
		for (int i = 1, k = 1; i <= 31; i++) {
			if (i%7 == 0) {
				gridPane.add(new TextArea(i + ""), i%7, ++k);
			} else {
				gridPane.add(new TextArea(i + ""), i%7, k);
			}
		}
		return gridPane;
	}
	
	
	
	public GridPane addWeeksView() {
		
		GridPane gridPane = new GridPane();
		
		for (int i = 0; i < 7; i++) {
			
			gridPane.add(new Text(getWeek(i, "en")), i, 0);
			
			gridPane.add(new Text(getWeek(i, "de")), i, 0);
			
		}
		
		for (int i = 0, k = -1; i < (7*24); i++) {
			if (i%24 == 0) {
				gridPane.add(new TextArea("" + (i%24) + ":00"),  ++k, i%24+1);
			} else {
				gridPane.add(new TextArea("" + (i%24) + ":00"), k, i%24+1);
			}
		}
		return gridPane;
	}
	
	
	
	public GridPane addDaysView() {
		
		GridPane gridPane = new GridPane();
		
		for (int i = 0; i < 24; i++) {
			gridPane.add(new TextArea("" + (i%24) + ":00"),  0, i);
		}
		
		return gridPane;
	}
	
	
	
	public GridPane addYearsView() {
		GridPane gridPane = new GridPane();
		
		for (int i = 0, k = 1; i < 12; i++) {
			if (i%4 == 0) {
				gridPane.add(new TextArea(getMonth(i, "en")), i%4, ++k);
			} else {
				gridPane.add(new TextArea(getMonth(i, "en")), i%4, k);
			}
		}
		return gridPane;
	}
	
	
	
	public String getMonth(int number, String language) {
		
		String[] monate = {"Januar", "Februar", "MÃ¤rz", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember" };
		
		String[] months = {"January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" };
		
		if (Objects.equals(language, "en")) return months[number];
		if (Objects.equals(language, "de")) return monate[number];
		return "";
	}
	
	public String getWeek(int number, String language) {
		String[] wochen = {"Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag", "Sonntag"};
		
		String[] weeks = {"Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"};
		
		if (Objects.equals(language, "en")) return weeks[number];
		if (Objects.equals(language, "de")) return wochen[number];
		return "";
	}


	public static void main (String[] args) {
        launch(args);
		
	}
}
